<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.supertool.dspui.dao.zhongpai.UserMapper">

<select id="findByUserName" resultType="com.supertool.dspui.model.User" >
 select * from st_user
 where (username= '${username}' or email=#{username}) and isdeleted='0'
</select>

<select id="getUserById" resultType="map" parameterType="Object" >
 select * from st_user where userid=#{id}
</select>

<select id="getUserCount" resultType="int">
	select count(*) from st_user where ${column}=#{value}
</select>

<update id="update" parameterType="com.supertool.dspui.model.User">
	update st_user set
	UserFullName = #{userFullName},
	PhoneNumber = #{phoneNumber},
	Email = #{email},
	Address = #{address},
	website = #{website},
	zipcode = #{zipcode},
	Description = #{description}
	where UserId = #{userId}
	
</update>

<update id="updateLoginInfo" parameterType="com.supertool.dspui.model.User">
	update st_user set
	loginCount = #{loginCount},
	logintime = now()
	where UserId = #{userId}
</update>

<update id="updateUserPasswordByName" >
	update st_user set
	Password = #{password}
	where UserName = #{username}
</update>

<insert id="insert" parameterType="User" useGeneratedKeys="true" keyColumn="UserId" keyProperty="userId">
 insert into st_user (UserName,Password,Email,createDate)
 values (#{username},#{password},#{email},now())
</insert>

<update id="updateAvatar" parameterType="map">
	update st_user set avatar=#{picture} where userid=${userid}
</update>

<update id="updateProfile" parameterType="map">
	update st_user set username=#{username}, province=#{province}, city=#{city}, description=#{description}, qq=#{qq}, weibo=#{weibo}, douban=#{douban}, renren=#{renren} where userid=${userid}
</update>

<update id="updateAccount" parameterType="map">
	update st_user set email=#{email}, password=#{password} where userid=${userid}
</update>

<update id="updateNotification" parameterType="map">
	update st_user set 
	<choose>
		<when test="projectnotify != null">projectnotify=#{projectnotify}</when>
		<otherwise>projectnotify='0'</otherwise>
	</choose>, 
	<choose>
		<when test="actionnotify != null">actionnotify=#{actionnotify}</when>
		<otherwise>actionnotify='0'</otherwise>
	</choose>, 
	<choose>
		<when test="newsnotify != null">newsnotify=#{newsnotify}</when>
		<otherwise>newsnotify='0'</otherwise>
	</choose> where userid=${userid}
</update>

<update id="updateTags" parameterType="map">
	update st_user set tags=#{tags} where userid=${userid}
</update>
<!-- function  -->


<select id="getUserDetailById" resultType="map" parameterType="Object" >
 select u.*, 
        (select count(p.id) from project p where p.createuser=#{id} and step > 0) as created, 
        (select count(p1.id) from project p1 right join support s on(p1.id=s.projectId) where s.userid=#{id}) as supported
  from st_user u where userid=#{id}
</select>

</mapper>
