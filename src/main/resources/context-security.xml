<?xml version="1.0" encoding="UTF-8"?> 
<beans:beans xmlns="http://www.springframework.org/schema/security"  
    xmlns:beans="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
	xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
        				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">  
  
     <!-- 该路径下的资源不用过滤 -->  
   <http pattern="/css/**" security='none' />
	<http pattern="/js/**" security='none' />
	<!-- <http pattern="/images/**" security='none' /> -->
	<http pattern="/demohour-index_files/**" security='none' />
	<http pattern="/captcha/*" security='none' />
	<http pattern="/local/*" security='none'/>
    <http pattern="/user/forgetPwd/**" security='none' />
	<http pattern="/test.jsp" security='none' />
	<http pattern="/accessDenied" security='none' />
	<http pattern="/exception" security='none' />
	<http pattern="/login*" security='none' />
	<http pattern="/checkuser" security='none' />
	<http pattern="/**/logout*" security='none' />
	<http pattern="/favicon.ico" security="none"/>
	<!-- 使“匿名用户可以访问任何资源” -->
    <http use-expressions="true" auto-config="true" >
       
        <custom-filter before=" LOGOUT_FILTER" ref="logoutFilter" />
        <custom-filter after="REMEMBER_ME_FILTER" ref="rememberMeFilter" />
        <custom-filter after="EXCEPTION_TRANSLATION_FILTER" ref="exceptionTranslationFilter" />
        <custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="resourceSecurityInterceptor" />
        <custom-filter before="FORM_LOGIN_FILTER" ref="usernamePasswordAuthenticationFilter" />
        <!-- session管理 -->
<!--     	<session-management session-fixation-protection="none" invalid-session-url="/login?error=-1">  
            <concurrency-control max-sessions="1"  error-if-maximum-exceeded="true"  expired-url="/login?error=-1"/>  
        </session-management>   -->
      
		
		 <intercept-url pattern="/**/login*" access="permitAll()" />
		<!-- <intercept-url  pattern="/jsp/login*" access='permitAll()' /> -->
		 <!-- 帐号管理 -->
		 <!--  <intercept-url pattern="/**/user/**"
			access="hasAnyAuthority('authorityManage')" /> -->
		 <intercept-url pattern="/**/user/**" access="permitAll()" />
		<!--  <intercept-url pattern="/jsp/user/**"
			access="hasAnyAuthority('authorityManage')" />  -->
	   <!-- <intercept-url pattern="/**" access="isAuthenticated()" />  -->
	   <intercept-url pattern="/**" access="permitAll()" /> 
    </http>
	<context:annotation-config />
	<context:component-scan base-package="com.supertool.dspui.security" />
	
    <authentication-manager alias="myAuthenticationManager">
         <authentication-provider ref="authenticationProvider" > 
         </authentication-provider>
        <authentication-provider ref="rememberMeAuthenticationProvider" />
    </authentication-manager>

    <beans:bean id="authenticationProvider"   class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
 		<!-- 实现了UserDetailsService的Bean --> 
 		<beans:property name="userDetailsService" ref="myUserDetailServiceImpl" >
 		</beans:property>  
	    <beans:property name="hideUserNotFoundExceptions" value="false" />  
	    <!-- 加密 -->
	    <beans:property name="passwordEncoder" ref="passwordEncoder"/>
 	</beans:bean>

   <beans:bean id="securityContextRepository" class="org.springframework.security.web.context.HttpSessionSecurityContextRepository" />

   <beans:bean id="securityContextPersistenceFilter" class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
       <beans:property name="securityContextRepository" ref="securityContextRepository" />
    </beans:bean>

   <beans:bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
   
        <beans:constructor-arg value="/login" />
        <beans:constructor-arg>
            <beans:list>  
                <beans:ref local="rememberMeServices" />
               <beans:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"></beans:bean>
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>

  <beans:bean id="usernamePasswordAuthenticationFilter" class="com.supertool.dspui.security.UsernamePasswordAuthenticationExtendFilter"> 
    <!--  <beans:bean id ="usernamePasswordAuthenticationFilter" class=""/> org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter-->
        <beans:property name="authenticationManager" ref="myAuthenticationManager" />
        <beans:property name="authenticationFailureHandler" ref="failureHandler" />
        <beans:property name="authenticationSuccessHandler" ref="successHandler" />
        <beans:property name="rememberMeServices" ref="rememberMeServices" />
    </beans:bean>

   <beans:bean id="successHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
        <beans:property name="defaultTargetUrl" value="/" />
        <beans:property name="alwaysUseDefaultTargetUrl" value="true" />
    </beans:bean>

   <beans:bean id="failureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
        <beans:property name="defaultFailureUrl" value="/login?error=fail" />
    </beans:bean>

   <beans:bean name="securityContextHolderAwareRequestFilte" class="org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter"></beans:bean>

   <beans:bean id="rememberMeFilter" class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
        <beans:property name="authenticationManager" ref="myAuthenticationManager" />
        <beans:property name="rememberMeServices" ref="rememberMeServices" />
    </beans:bean>

   <beans:bean id="rememberMeServices" class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
        <beans:property name="userDetailsService" ref="myUserDetailServiceImpl" />
        <beans:property name="key" value="springRocks" />
        <beans:property name="alwaysRemember" value="false" />
    </beans:bean>

   <beans:bean id="rememberMeAuthenticationProvider" class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
        <beans:property name="key" value="springRocks" />
    </beans:bean>


   <beans:bean  id="passwordEncoder" class="com.supertool.dspui.security.SecPassworsdEncoder" />


   <beans:bean id="resourceSecurityInterceptor" class="com.supertool.dspui.security.MySecurityFilter">
       <!-- 用户拥有的权限 -->
    	<beans:property name="authenticationManager"  ref="myAuthenticationManager" />
	   <!-- 用户是否拥有所请求资源的权限 -->  
    <beans:property name="accessDecisionManager"   ref="myAccessDecisionManager" />
		<!-- 资源与权限对应关系 -->  
    <beans:property name="securityMetadataSourceService"   ref="mySecurityMetadataSourceService" />  
    </beans:bean>

   <beans:bean id="myAccessDecisionManager"   class="com.supertool.dspui.security.MyAccessDecisionManager"/>

   <!-- <beans:bean id="secureResourceFilterInvocationDefinitionSource" class="com.supertool.adserving.security.SecureResourceFilterInvocationDefinitionSource">
        <beans:property name="userDetailsService" ref="myUserDetailServiceImpl" />
    </beans:bean> -->
    
   <beans:bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
        <beans:property name="authenticationEntryPoint" ref="authenticationEntryPoint" />
        <beans:property name="accessDeniedHandler" ref="accessDeniedHandler" />
    </beans:bean>

   <beans:bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <beans:property name="loginFormUrl" value="/login" />
    </beans:bean>

   <beans:bean id="accessDeniedHandler" class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
        <beans:property name="errorPage" value="/accessDenied" />
    </beans:bean>

   <beans:bean id="loggerListener" class="org.springframework.security.access.event.LoggerListener" />

</beans:beans>